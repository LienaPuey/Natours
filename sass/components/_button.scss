
.btn {
    &:link, 
    &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: $default-font-size;
    }

    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black,.2);

        &::after {
            /*se va a mostrar solo después de que hagamos hover en el botón y no antes*/
            transform: scaleX(1.4) scaleY(1.6); /*agranda el elemento en las direcciones que queramos*/
            opacity: 0;
        }
    }
    
    &:active {
        transform: translateY(-.1rem); /*respecto al estado inicial, no al hover*/
        box-shadow: 0 .5rem 1rem rgba($color-black,.2);
    }
    
    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after{
            background-color: $color-white;
        }
    }
    
    &::after { /*creamos un botón exactamente igual que el que tenemos pero escondido detrás, cuando nos alejamos del elemento principal aparece este, se trata como un hijo del anterior */
        content: "";
        display: inline-block; /*igual que el botón que tenemos*/
        height: 100%; /*ocupa el 100% del botón original y lo mismo con el ancho*/
        width: 100%;
        border-radius: 10rem;
        position: absolute; /*esto hará que se vea detrás y herede del botón y no del header, asímismo hemos de especificar en el btn que la posicion sea relative*/
        top: 0;
        left: 0;
        z-index: -1; /*para que esté detrás y se vean las letras*/
        transition: all .4s; /*afecta a btn:hover::after*/
    }

    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards; /*aplica automáticamente los estilos hasta un 0% antes de que comience la animación, los estilos de moveInButton al 0% se aplicarán antes de comenzar la animación*/
    }
}

.btn-text {
    &:link,
    &:visited {
        font-size: 1.6rem;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }
}
