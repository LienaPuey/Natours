/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*10px = 1rem*/

*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; 
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 3rem;

    box-sizing: border-box;
}

.header {
    height: 95vh; /*ocupa el 95% de la pantalla o viewport*/
    background-image: linear-gradient(
        to right bottom,
        hsla(111, 55%, 64%, 0.80),
        hsla(160, 64%, 43%, 0.80)),
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; /*la posición es respecto al padre que es el header, para que empiece a contar desde ahí añadimos 
    la propiedad position:relative al padre (header)*/
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden;/*para que lo que hay detrás del elemeno permanezca ocuta y no se mueva nada y no haya shaking*/
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem) ;
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem) ;
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

.btn:active {
    transform: translateY(-.1rem); /*respecto al estado inicial, no al hover*/
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn--white {
    background-color: #fff;
    color: #777;
}

.btn::after { /*creamos un botón exactamente igual que el que tenemos pero escondido detrás, cuando nos alejamos del elemento principal aparece este, se trata como un hijo del anterior */
    content: "";
    display: inline-block; /*igual que el botón que tenemos*/
    height: 100%; /*ocupa el 100% del botón original y lo mismo con el ancho*/
    width: 100%;
    border-radius: 10rem;
    position: absolute; /*esto hará que se vea detrás y herede del botón y no del header, asímismo hemos de especificar en el btn que la posicion sea relative*/
    top: 0;
    left: 0;
    z-index: -1; /*para que esté detrás y se vean las letras*/
    transition: all .4s; /*afecta a btn:hover::after*/
}

.btn--white::after {
    background-color: #fff;
}

.btn:hover::after { /*se va a mostrar solo después de que hagamos hover en el botón y no antes*/
    transform: scaleX(1.4) scaleY(1.6); /*agranda el elemento en las direcciones que queramos*/
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /*aplica automáticamente los estilos hasta un 0% antes de que comience la animación, los estilos de moveInButton al 0% se aplicarán antes de comenzar la animación*/
}